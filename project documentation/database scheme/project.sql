-- MySQL Script generated by MySQL Workbench
-- 15 ديس, 2015 EET 09:28:07 م
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema project
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema project
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `project` DEFAULT CHARACTER SET utf8 ;
USE `project` ;

-- -----------------------------------------------------
-- Table `project`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `project`.`user` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `password` VARCHAR(128) NULL,
  `friend_count` INT(11) NOT NULL,
  `question_count` INT(11) NOT NULL,
  `ans_count` INT(11) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `password_UNIQUE` (`password` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `project`.`question` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sender_id` INT(11) NOT NULL,
  `reciever_id` INT(11) NOT NULL,
  `statement` VARCHAR(128) NOT NULL,
  `is_ans` TINYINT(1) NOT NULL,
  `answer` VARCHAR(128) NOT NULL,
  `likes_count` INT(11) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_question_user_idx` (`sender_id` ASC),
  INDEX `fk_question_user1_idx` (`reciever_id` ASC),
  CONSTRAINT `fk_question_user`
    FOREIGN KEY (`sender_id`)
    REFERENCES `project`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_question_user1`
    FOREIGN KEY (`reciever_id`)
    REFERENCES `project`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`friendship`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `project`.`friendship` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `friend_one` INT(11) NOT NULL,
  `friend_two` INT(11) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_friendship_user1_idx` (`friend_one` ASC),
  INDEX `fk_friendship_user2_idx` (`friend_two` ASC),
  CONSTRAINT `fk_friendship_user1`
    FOREIGN KEY (`friend_one`)
    REFERENCES `project`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_friendship_user2`
    FOREIGN KEY (`friend_two`)
    REFERENCES `project`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `project`.`friend_request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `project`.`friend_request` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `sender_id` INT(11) NOT NULL,
  `reciever_id` INT(11) NOT NULL,
  `status` TINYINT(2) NOT NULL,
  `create_time` DATETIME NOT NULL,
  `update_time` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  INDEX `fk_friend_request_user1_idx` (`sender_id` ASC),
  INDEX `fk_friend_request_user2_idx` (`reciever_id` ASC),
  CONSTRAINT `fk_friend_request_user1`
    FOREIGN KEY (`sender_id`)
    REFERENCES `project`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_friend_request_user2`
    FOREIGN KEY (`reciever_id`)
    REFERENCES `project`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
